// Digota <http://digota.com> - eCommerce microservice
// Copyright (c) 2018 Yaron Sumel <yaron@digota.com>
//
// MIT License
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

option go_package = "github.com/digota/digota/order/orderpb";

package orderpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/digota/digota/payment/paymentpb/payment.proto";

service OrderService {
    rpc New (NewRequest) returns (Order) {
    }
    rpc Get (GetRequest) returns (Order) {
    }
    rpc Pay (PayRequest) returns (Order) {
    }
    rpc Return (ReturnRequest) returns (Order) {
    }
    rpc List (ListRequest) returns (OrderList) {
    }
}

message Order {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    int64 amount = 2;
    paymentpb.Currency currency = 3;
    repeated OrderItem items = 4;
    map<string, string> metadata = 5;
    string email = 6;
    string chargeId = 7;
    status Status = 8;
    enum status {
        Created = 0;
        Paid = 1;
        Canceled = 2;
        Fulfilled = 3;
        Returned = 4;
    }
    Shipping shipping = 9;
    string userId = 10;
    int64 created = 998;
    int64 updated = 999;
}

message OrderItem {
    Type type = 1 [(gogoproto.moretags) = "validate:\"required,gte=1,lte=4\""];
    enum Type {
        Reserved = 0;
        Sku = 1;
        Discount = 2;
        Tax = 3;
        Shipping = 4;
    }
    int64 quantity = 2 [(gogoproto.moretags) = "validate:\"omitempty,gte=0\""];
    int64 amount = 3;
    paymentpb.Currency currency = 4 [(gogoproto.moretags) = "validate:\"omitempty,gte=1,lte=128\""];
    string parent = 5 [(gogoproto.moretags) = "validate:\"omitempty,uuid4\""];
    string description = 6;
}

message Shipping {
    string name = 1;
    string phone = 2;
    Address address = 3;
    string carrier = 4;
    string trackingNumber = 5;
    message Address {
        string line1 = 1;
        string city = 2;
        string country = 3;
        string line2 = 4;
        string postalCode = 5;
        string state = 6;
    }
}

message OrderList {
    repeated Order orders = 1;
    int32 total = 2;
}

// requests

message NewRequest {
    paymentpb.Currency currency = 1 [(gogoproto.moretags) = "validate:\"required,gte=1,lte=128\""];
    repeated OrderItem items = 2 [(gogoproto.moretags) = "bson:\"items\" validate:\"dive,required\""];
    map<string, string> metadata = 3;
    string email = 4 [(gogoproto.moretags) = "validate:\"omitempty,email\""];
    Shipping shipping = 5 [(gogoproto.moretags) = "validate:\"omitempty,dive\""];
    string userId = 6 [(gogoproto.moretags) = "bson:\"user_id\" validate:\"required\""];
}

message GetRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"uuid4,required\""];
}

message PayRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"uuid4,required\""];
    paymentpb.Card card = 2 [(gogoproto.moretags) = "validate:\"dive,required\""];
    paymentpb.PaymentProviderId paymentProviderId = 3 [(gogoproto.moretags) = "validate:\"required,gte=1,lte=1\""];
}

message ReturnRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"uuid4,required\""];
}

message ListRequest {
    int64 page = 1 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0\""];
    int64 limit = 2 [(gogoproto.moretags) = "validate:\"omitempty,required,gt=0\""];
    Sort sort = 3 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0,lte=4\""];
    enum Sort {
        Natural = 0;
        CreatedDesc = 1;
        CreatedAsc = 2;
        UpdatedDesc = 3;
        UpdatedAsc = 4;
    }
    string userId = 4;
}
